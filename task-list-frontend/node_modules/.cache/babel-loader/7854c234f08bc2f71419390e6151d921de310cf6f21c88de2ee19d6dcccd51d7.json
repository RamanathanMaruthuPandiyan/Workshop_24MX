{"ast":null,"code":"var _jsxFileName = \"/Users/ramanathan/Desktop/PG-MCA/Workshop-24MX/task-list-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    control,\n    handleSubmit,\n    reset\n  } = useForm();\n  const [tasks, setTasks] = useState([]);\n  const [editIndex, setEditIndex] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch tasks from the API when the component mounts\n  useEffect(() => {\n    fetch('') // Limiting the results for simplicity\n    .then(response => response.json()).then(data => {\n      // Transforming the data to fit your task structure\n      const formattedTasks = data.map(task => ({\n        title: task.title,\n        description: 'Sample description',\n        // JSONPlaceholder doesn't provide descriptions, so we use a placeholder\n        deadline: '2024-10-30',\n        // Set a static deadline as placeholder data\n        completed: task.completed\n      }));\n      setTasks(formattedTasks);\n    }).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n  const onSubmit = data => {\n    if (editIndex !== null) {\n      // Update existing task using PUT request\n      fetch(`https://jsonplaceholder.typicode.com/todos/${editIndex + 1}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(updatedTask => {\n        const updatedTasks = [...tasks];\n        updatedTasks[editIndex] = {\n          ...data,\n          completed: updatedTask.completed\n        };\n        setTasks(updatedTasks);\n        setEditIndex(null);\n        setShowForm(false);\n      }).catch(error => console.error('Error updating task:', error));\n    } else {\n      // Create a new task using POST request\n      fetch('https://jsonplaceholder.typicode.com/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(newTask => {\n        setTasks([...tasks, {\n          ...data,\n          completed: false\n        }]);\n        setShowForm(false);\n      }).catch(error => console.error('Error adding task:', error));\n    }\n    reset();\n  };\n  const handleEdit = index => {\n    const taskToEdit = tasks[index];\n    setEditIndex(index);\n    reset(taskToEdit);\n    setShowForm(true);\n  };\n  const handleDelete = index => {\n    // Delete task using DELETE request\n    fetch(`https://jsonplaceholder.typicode.com/todos/${index + 1}`, {\n      method: 'DELETE'\n    }).then(() => {\n      const updatedTasks = tasks.filter((_, i) => i !== index);\n      setTasks(updatedTasks);\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  const toggleForm = () => {\n    setShowForm(!showForm);\n    setEditIndex(null);\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: toggleForm,\n      children: showForm ? 'Close Form' : 'Add Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-button\",\n          onClick: toggleForm,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Title:\", /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"title\",\n              control: control,\n              defaultValue: \"\",\n              rules: {\n                required: 'Title is required'\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ...field,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"description\",\n              control: control,\n              defaultValue: \"\",\n              rules: {\n                required: 'Description is required'\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ...field,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Deadline:\", /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"deadline\",\n              control: control,\n              defaultValue: \"\",\n              rules: {\n                required: 'Deadline is required'\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                ...field,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: editIndex !== null ? 'Update' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deadline\",\n            children: [\"Deadline: \", task.deadline]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => handleEdit(index),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDelete(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-badge ${task.completed ? 'completed' : 'not-completed'}`,\n          children: task.completed ? 'Completed' : 'Not Completed'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0Dp9PhSZFaKpO1qC+wxJ9xfyXqc=\", false, function () {\n  return [useForm];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useForm","Controller","jsxDEV","_jsxDEV","App","_s","control","handleSubmit","reset","tasks","setTasks","editIndex","setEditIndex","showForm","setShowForm","fetch","then","response","json","data","formattedTasks","map","task","title","description","deadline","completed","catch","error","console","onSubmit","method","headers","body","JSON","stringify","updatedTask","updatedTasks","newTask","handleEdit","index","taskToEdit","handleDelete","filter","_","i","toggleForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","defaultValue","rules","required","render","field","type","_c","$RefreshReg$"],"sources":["/Users/ramanathan/Desktop/PG-MCA/Workshop-24MX/task-list-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const { control, handleSubmit, reset } = useForm();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  // Fetch tasks from the API when the component mounts\r\n  useEffect(() => {\r\n    fetch('') // Limiting the results for simplicity\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Transforming the data to fit your task structure\r\n        const formattedTasks = data.map((task) => ({\r\n          title: task.title,\r\n          description: 'Sample description', // JSONPlaceholder doesn't provide descriptions, so we use a placeholder\r\n          deadline: '2024-10-30', // Set a static deadline as placeholder data\r\n          completed: task.completed,\r\n        }));\r\n        setTasks(formattedTasks);\r\n      })\r\n      .catch((error) => console.error('Error fetching tasks:', error));\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    if (editIndex !== null) {\r\n      // Update existing task using PUT request\r\n      fetch(`https://jsonplaceholder.typicode.com/todos/${editIndex + 1}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((updatedTask) => {\r\n          const updatedTasks = [...tasks];\r\n          updatedTasks[editIndex] = { ...data, completed: updatedTask.completed };\r\n          setTasks(updatedTasks);\r\n          setEditIndex(null);\r\n          setShowForm(false);\r\n        })\r\n        .catch((error) => console.error('Error updating task:', error));\r\n    } else {\r\n      // Create a new task using POST request\r\n      fetch('https://jsonplaceholder.typicode.com/todos', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((newTask) => {\r\n          setTasks([...tasks, { ...data, completed: false }]);\r\n          setShowForm(false);\r\n        })\r\n        .catch((error) => console.error('Error adding task:', error));\r\n    }\r\n    reset();\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    const taskToEdit = tasks[index];\r\n    setEditIndex(index);\r\n    reset(taskToEdit);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    // Delete task using DELETE request\r\n    fetch(`https://jsonplaceholder.typicode.com/todos/${index + 1}`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then(() => {\r\n        const updatedTasks = tasks.filter((_, i) => i !== index);\r\n        setTasks(updatedTasks);\r\n      })\r\n      .catch((error) => console.error('Error deleting task:', error));\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setShowForm(!showForm);\r\n    setEditIndex(null);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Task Manager</h1>\r\n      <button className=\"add-button\" onClick={toggleForm}>\r\n        {showForm ? 'Close Form' : 'Add Task'}\r\n      </button>\r\n\r\n      {showForm && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close-button\" onClick={toggleForm}>&times;</span>\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\r\n              <label>\r\n                Title:\r\n                <Controller\r\n                  name=\"title\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  rules={{ required: 'Title is required' }}\r\n                  render={({ field }) => <input type=\"text\" {...field} required />}\r\n                />\r\n              </label>\r\n              <label>\r\n                Description:\r\n                <Controller\r\n                  name=\"description\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  rules={{ required: 'Description is required' }}\r\n                  render={({ field }) => <input type=\"text\" {...field} required />}\r\n                />\r\n              </label>\r\n              <label>\r\n                Deadline:\r\n                <Controller\r\n                  name=\"deadline\"\r\n                  control={control}\r\n                  defaultValue=\"\"\r\n                  rules={{ required: 'Deadline is required' }}\r\n                  render={({ field }) => <input type=\"date\" {...field} required />}\r\n                />\r\n              </label>\r\n              <button type=\"submit\">\r\n                {editIndex !== null ? 'Update' : 'Add'}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h2>Task List</h2>\r\n      <div className=\"task-list\">\r\n        {tasks.map((task, index) => (\r\n          <div className=\"task-card\" key={index}>\r\n            <div className=\"task-details\">\r\n              <h3>{task.title}</h3>\r\n              <p className=\"description\">{task.description}</p>\r\n              <div className=\"deadline\">Deadline: {task.deadline}</div>\r\n            </div>\r\n            <div className=\"task-actions\">\r\n              <button className=\"edit-button\" onClick={() => handleEdit(index)}>Edit</button>\r\n              <button className=\"delete-button\" onClick={() => handleDelete(index)}>Delete</button>\r\n            </div>\r\n            <div className={`status-badge ${task.completed ? 'completed' : 'not-completed'}`}>\r\n              {task.completed ? 'Completed' : 'Not Completed'}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}